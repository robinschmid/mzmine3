/*
 * Copyright 2006-2021 The MZmine Development Team
 *
 * This file is part of MZmine.
 *
 * MZmine is free software; you can redistribute it and/or modify it under the terms of the GNU
 * General Public License as published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * MZmine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with MZmine; if not,
 * write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 */

package io.github.mzmine.modules.tools.rawfilerename;

import io.github.mzmine.datamodel.MZmineProject;
import io.github.mzmine.datamodel.RawDataFile;
import io.github.mzmine.main.MZmineCore;
import io.github.mzmine.modules.MZmineModuleCategory;
import io.github.mzmine.modules.MZmineProcessingModule;
import io.github.mzmine.parameters.ParameterSet;
import io.github.mzmine.parameters.parametertypes.selectors.RawDataFilesSelection;
import io.github.mzmine.parameters.parametertypes.selectors.RawDataFilesSelectionType;
import io.github.mzmine.project.impl.MZmineProjectImpl;
import io.github.mzmine.taskcontrol.Task;
import io.github.mzmine.util.ExitCode;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public class RawDataFileRenameModule implements MZmineProcessingModule {

  /**
   * Renames a raw data file.
   *
   * @param file The file to rename.
   * @param name The proposed name. A unique name is generated by {@link MZmineProjectImpl#getUniqueName(String,
   *             List)}
   */
  public static void renameFile(RawDataFile file, String name) {
    renameFile(file, name, true);
  }

  /**
   * Renames a raw data file
   *
   * @param file                 The file to rename.
   * @param name                 The proposed name. A unique name is generated by {@link
   *                             MZmineProjectImpl#getUniqueName(String, List)}
   * @param fileAlreadyInProject Specifies if the file is already in the project (e.g. project
   *                             import)
   */
  public static void renameFile(RawDataFile file, String name, boolean fileAlreadyInProject) {
    ParameterSet moduleParameters = MZmineCore.getConfiguration()
        .getModuleParameters(RawDataFileRenameModule.class).cloneParameterSet();

    final MZmineProject project = MZmineCore.getProjectManager().getCurrentProject();

    if (project != null) {
        final List<String> names = new ArrayList<>(
            project.getCurrentRawDataFiles().stream().map(RawDataFile::getName).toList());
        if (fileAlreadyInProject) {
          names.remove(file.getName());
        }
        name = names.contains(name) ? MZmineProjectImpl.getUniqueName(name, names) : name;
    }

    RawDataFilesSelection selection = new RawDataFilesSelection();
    selection.setSelectionType(RawDataFilesSelectionType.SPECIFIC_FILES);
    selection.setSpecificFiles(new RawDataFile[]{file});
    moduleParameters.getParameter(RawDataFileRenameParameters.files).setValue(selection);
    moduleParameters.setParameter(RawDataFileRenameParameters.newName, name);

    MZmineCore.runMZmineModule(RawDataFileRenameModule.class, moduleParameters);
  }

  @Override
  public @NotNull String getName() {
    return "Raw data file rename";
  }

  @Override
  public @Nullable Class<? extends ParameterSet> getParameterSetClass() {
    return RawDataFileRenameParameters.class;
  }

  @Override
  public @NotNull String getDescription() {
    return "Renames raw data files.";
  }

  @Override
  public @NotNull ExitCode runModule(@NotNull MZmineProject project,
      @NotNull ParameterSet parameters, @NotNull Collection<Task> tasks,
      @NotNull Instant moduleCallDate) {

    tasks.add(new RawDataFileRenameTask(null, moduleCallDate, parameters));
    return ExitCode.OK;
  }

  @Override
  public @NotNull MZmineModuleCategory getModuleCategory() {
    return MZmineModuleCategory.TOOLS;
  }
}
